-- JSON_OBJECT()
SELECT JSON_OBJECT();
 ?column? 
----------
 {}
(1 row)

SELECT JSON_OBJECT(RETURNING json);
 ?column? 
----------
 {}
(1 row)

SELECT JSON_OBJECT(RETURNING json FORMAT JSON);
 ?column? 
----------
 {}
(1 row)

SELECT JSON_OBJECT(RETURNING json FORMAT JSONB);
 ?column? 
----------
 {}
(1 row)

SELECT JSON_OBJECT(RETURNING jsonb);
 ?column? 
----------
 {}
(1 row)

SELECT JSON_OBJECT(RETURNING jsonb FORMAT JSON);
 ?column? 
----------
 {}
(1 row)

SELECT JSON_OBJECT(RETURNING jsonb FORMAT JSONB);
 ?column? 
----------
 {}
(1 row)

SELECT JSON_OBJECT(RETURNING text);
 ?column? 
----------
 {}
(1 row)

SELECT JSON_OBJECT(RETURNING text FORMAT JSON);
 ?column? 
----------
 {}
(1 row)

SELECT JSON_OBJECT(RETURNING text FORMAT JSON ENCODING UTF8);
ERROR:  cannot set JSON encoding for non-bytea output types
SELECT JSON_OBJECT(RETURNING text FORMAT JSON ENCODING INVALID_ENCODING);
ERROR:  unrecognized JSON encoding: invalid_encoding
SELECT JSON_OBJECT(RETURNING text FORMAT JSONB);
 ?column? 
----------
 {}
(1 row)

SELECT JSON_OBJECT(RETURNING text FORMAT JSONB ENCODING UTF8);
ERROR:  syntax error at or near "ENCODING"
LINE 1: SELECT JSON_OBJECT(RETURNING text FORMAT JSONB ENCODING UTF8...
                                                       ^
SELECT JSON_OBJECT(RETURNING bytea);
 ?column? 
----------
 \x7b7d
(1 row)

SELECT JSON_OBJECT(RETURNING bytea FORMAT JSON);
 ?column? 
----------
 \x7b7d
(1 row)

SELECT JSON_OBJECT(RETURNING bytea FORMAT JSON ENCODING UTF8);
 ?column? 
----------
 \x7b7d
(1 row)

SELECT JSON_OBJECT(RETURNING bytea FORMAT JSON ENCODING UTF16);
ERROR:  invalid destination encoding name "UTF16"
SELECT JSON_OBJECT(RETURNING bytea FORMAT JSON ENCODING UTF32);
ERROR:  invalid destination encoding name "UTF32"
SELECT JSON_OBJECT(RETURNING bytea FORMAT JSONB);
  ?column?  
------------
 \x00000020
(1 row)

SELECT JSON_OBJECT(NULL: 1);
ERROR:  argument 3 cannot be null
HINT:  Object keys should be text.
SELECT JSON_OBJECT(json '[1]': 123);
ERROR:  key value must be scalar, not array, composite, or json
SELECT JSON_OBJECT(ARRAY[1,2,3]: 'aaa');
ERROR:  key value must be scalar, not array, composite, or json
SELECT JSON_OBJECT(
	'a': '123',
	1.23: 123,
	'c': json '[ 1,true,{ } ]',
	'd': jsonb '{ "x" : 123.45 }'
);
                                ?column?                                
------------------------------------------------------------------------
 {"a" : "123", "1.23" : 123, "c" : [ 1,true,{ } ], "d" : {"x": 123.45}}
(1 row)

SELECT JSON_OBJECT(
	'a': '123',
	1.23: 123,
	'c': json '[ 1,true,{ } ]',
	'd': jsonb '{ "x" : 123.45 }'
	RETURNING jsonb
);
                             ?column?                              
-------------------------------------------------------------------
 {"a": "123", "c": [1, true, {}], "d": {"x": 123.45}, "1.23": 123}
(1 row)

/*
SELECT JSON_OBJECT(
	'a': '123',
	KEY 1.23 VALUE 123,
	'c' VALUE json '[1, true, {}]'
);
*/
SELECT JSON_OBJECT('a': '123', 'b': JSON_OBJECT('a': 111, 'b': 'aaa'));
                   ?column?                    
-----------------------------------------------
 {"a" : "123", "b" : {"a" : 111, "b" : "aaa"}}
(1 row)

SELECT JSON_OBJECT('a': '123', 'b': JSON_OBJECT('a': 111, 'b': 'aaa' RETURNING jsonb));
                  ?column?                   
---------------------------------------------
 {"a" : "123", "b" : {"a": 111, "b": "aaa"}}
(1 row)

SELECT JSON_OBJECT('a': JSON_OBJECT('b': 1 RETURNING text));
       ?column?        
-----------------------
 {"a" : "{\"b\" : 1}"}
(1 row)

SELECT JSON_OBJECT('a': JSON_OBJECT('b': 1 RETURNING text) FORMAT JSON);
     ?column?      
-------------------
 {"a" : {"b" : 1}}
(1 row)

SELECT JSON_OBJECT('a': JSON_OBJECT('b': 1 RETURNING text) FORMAT JSONB);
     ?column?     
------------------
 {"a" : {"b": 1}}
(1 row)

SELECT JSON_OBJECT('a': JSON_OBJECT('b': 1 RETURNING bytea));
            ?column?             
---------------------------------
 {"a" : "\\x7b226222203a20317d"}
(1 row)

SELECT JSON_OBJECT('a': JSON_OBJECT('b': 1 RETURNING bytea) FORMAT JSON);
     ?column?      
-------------------
 {"a" : {"b" : 1}}
(1 row)

SELECT JSON_OBJECT('a': JSON_OBJECT('b': 1 RETURNING bytea FORMAT JSONB));
                           ?column?                            
---------------------------------------------------------------
 {"a" : "\\x01000020010000800b000010620000002000000000800100"}
(1 row)

SELECT JSON_OBJECT('a': JSON_OBJECT('b': 1 RETURNING bytea FORMAT JSONB) FORMAT JSONB);
     ?column?     
------------------
 {"a" : {"b": 1}}
(1 row)

SELECT JSON_OBJECT('a': JSON_OBJECT('b': 1 RETURNING bytea FORMAT JSON) FORMAT JSONB);
ERROR:  incorrect jsonb binary data format
SELECT JSON_OBJECT('a': '1', 'b': NULL, 'c': 2);
             ?column?             
----------------------------------
 {"a" : "1", "b" : null, "c" : 2}
(1 row)

SELECT JSON_OBJECT('a': '1', 'b': NULL, 'c': 2 NULL ON NULL);
             ?column?             
----------------------------------
 {"a" : "1", "b" : null, "c" : 2}
(1 row)

SELECT JSON_OBJECT('a': '1', 'b': NULL, 'c': 2 ABSENT ON NULL);
       ?column?       
----------------------
 {"a" : "1", "c" : 2}
(1 row)

SELECT JSON_OBJECT(1: 1, '1': NULL WITH UNIQUE);
ERROR:  duplicate JSON key "1"
SELECT JSON_OBJECT(1: 1, '1': NULL ABSENT ON NULL WITH UNIQUE);
ERROR:  duplicate JSON key "1"
SELECT JSON_OBJECT(1: 1, '1': NULL NULL ON NULL WITH UNIQUE RETURNING jsonb);
ERROR:  duplicate JSON key "1"
SELECT JSON_OBJECT(1: 1, '1': NULL ABSENT ON NULL WITH UNIQUE RETURNING jsonb);
ERROR:  duplicate JSON key "1"
SELECT JSON_OBJECT(1: 1, '2': NULL, '1': 1 NULL ON NULL WITH UNIQUE);
ERROR:  duplicate JSON key "1"
SELECT JSON_OBJECT(1: 1, '2': NULL, '1': 1 ABSENT ON NULL WITH UNIQUE);
ERROR:  duplicate JSON key "1"
SELECT JSON_OBJECT(1: 1, '2': NULL, '1': 1 ABSENT ON NULL WITHOUT UNIQUE);
      ?column?      
--------------------
 {"1" : 1, "1" : 1}
(1 row)

SELECT JSON_OBJECT(1: 1, '2': NULL, '1': 1 ABSENT ON NULL WITH UNIQUE RETURNING jsonb);
ERROR:  duplicate JSON key "1"
SELECT JSON_OBJECT(1: 1, '2': NULL, '1': 1 ABSENT ON NULL WITHOUT UNIQUE RETURNING jsonb);
 ?column? 
----------
 {"1": 1}
(1 row)

SELECT JSON_OBJECT(1: 1, '2': NULL, '3': 1, 4: NULL, '5': 'a' ABSENT ON NULL WITH UNIQUE RETURNING jsonb);
          ?column?          
----------------------------
 {"1": 1, "3": 1, "5": "a"}
(1 row)

-- JSON_ARRAY()
SELECT JSON_ARRAY();
 ?column? 
----------
 []
(1 row)

SELECT JSON_ARRAY(RETURNING json);
 ?column? 
----------
 []
(1 row)

SELECT JSON_ARRAY(RETURNING json FORMAT JSON);
 ?column? 
----------
 []
(1 row)

SELECT JSON_ARRAY(RETURNING json FORMAT JSONB);
 ?column? 
----------
 []
(1 row)

SELECT JSON_ARRAY(RETURNING jsonb);
 ?column? 
----------
 []
(1 row)

SELECT JSON_ARRAY(RETURNING jsonb FORMAT JSON);
 ?column? 
----------
 []
(1 row)

SELECT JSON_ARRAY(RETURNING jsonb FORMAT JSONB);
 ?column? 
----------
 []
(1 row)

SELECT JSON_ARRAY(RETURNING text);
 ?column? 
----------
 []
(1 row)

SELECT JSON_ARRAY(RETURNING text FORMAT JSON);
 ?column? 
----------
 []
(1 row)

SELECT JSON_ARRAY(RETURNING text FORMAT JSON ENCODING UTF8);
ERROR:  cannot set JSON encoding for non-bytea output types
SELECT JSON_ARRAY(RETURNING text FORMAT JSON ENCODING INVALID_ENCODING);
ERROR:  unrecognized JSON encoding: invalid_encoding
SELECT JSON_ARRAY(RETURNING text FORMAT JSONB);
 ?column? 
----------
 []
(1 row)

SELECT JSON_ARRAY(RETURNING text FORMAT JSONB ENCODING UTF8);
ERROR:  syntax error at or near "ENCODING"
LINE 1: SELECT JSON_ARRAY(RETURNING text FORMAT JSONB ENCODING UTF8)...
                                                      ^
SELECT JSON_ARRAY(RETURNING bytea);
 ?column? 
----------
 \x5b5d
(1 row)

SELECT JSON_ARRAY(RETURNING bytea FORMAT JSON);
 ?column? 
----------
 \x5b5d
(1 row)

SELECT JSON_ARRAY(RETURNING bytea FORMAT JSON ENCODING UTF8);
 ?column? 
----------
 \x5b5d
(1 row)

SELECT JSON_ARRAY(RETURNING bytea FORMAT JSON ENCODING UTF16);
ERROR:  invalid destination encoding name "UTF16"
SELECT JSON_ARRAY(RETURNING bytea FORMAT JSON ENCODING UTF32);
ERROR:  invalid destination encoding name "UTF32"
SELECT JSON_ARRAY(RETURNING bytea FORMAT JSONB);
  ?column?  
------------
 \x00000040
(1 row)

SELECT JSON_ARRAY('aaa', 111, true, array[1,2,3], NULL, json '{"a": [1]}', jsonb '["a",3]');
                     ?column?                      
---------------------------------------------------
 ["aaa", 111, true, [1,2,3], {"a": [1]}, ["a", 3]]
(1 row)

SELECT JSON_ARRAY('a',  NULL, 'b' NULL   ON NULL);
     ?column?     
------------------
 ["a", null, "b"]
(1 row)

SELECT JSON_ARRAY('a',  NULL, 'b' ABSENT ON NULL);
  ?column?  
------------
 ["a", "b"]
(1 row)

SELECT JSON_ARRAY(NULL, NULL, 'b' ABSENT ON NULL);
 ?column? 
----------
 ["b"]
(1 row)

SELECT JSON_ARRAY('a',  NULL, 'b' NULL   ON NULL RETURNING jsonb);
     ?column?     
------------------
 ["a", null, "b"]
(1 row)

SELECT JSON_ARRAY('a',  NULL, 'b' ABSENT ON NULL RETURNING jsonb);
  ?column?  
------------
 ["a", "b"]
(1 row)

SELECT JSON_ARRAY(NULL, NULL, 'b' ABSENT ON NULL RETURNING jsonb);
 ?column? 
----------
 ["b"]
(1 row)

SELECT JSON_ARRAY(JSON_ARRAY('{ "a" : 123 }' RETURNING text));
           ?column?            
-------------------------------
 ["[\"{ \\\"a\\\" : 123 }\"]"]
(1 row)

SELECT JSON_ARRAY(JSON_ARRAY('{ "a" : 123 }' FORMAT JSON RETURNING text));
       ?column?        
-----------------------
 ["[{ \"a\" : 123 }]"]
(1 row)

SELECT JSON_ARRAY(JSON_ARRAY('{ "a" : 123 }' FORMAT JSON RETURNING text) FORMAT JSON);
     ?column?      
-------------------
 [[{ "a" : 123 }]]
(1 row)

SELECT JSON_ARRAY(JSON_ARRAY('{ "a" : 123 }' FORMAT JSON RETURNING text) FORMAT JSONB);
    ?column?    
----------------
 [[{"a": 123}]]
(1 row)

SELECT JSON_ARRAY(JSON_ARRAY('{ "a" : 123 }' FORMAT JSON RETURNING bytea FORMAT JSONB));
                                ?column?                                 
-------------------------------------------------------------------------
 ["\\x01000040180000d001000020010000800b000010610000002000000000807b00"]
(1 row)

SELECT JSON_ARRAY(JSON_ARRAY('{ "a" : 123 }' FORMAT JSON RETURNING bytea FORMAT JSONB) FORMAT JSONB);
    ?column?    
----------------
 [[{"a": 123}]]
(1 row)

